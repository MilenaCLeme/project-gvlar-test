type User {
  id: Int!
  name: String!
  email: String!
  password: String!
  phone: String!
  validation: Boolean!
  role: String!
}

type AuthPayload {
  token: String
  user: User
}

input NewUser {
  name: String!
  email: String!
  phone: String!
  password: String!
  role: String!
}

input UpdateUser {
  id: Int
  name: String
  email: String
  password: String
  phone: String
  validation: Boolean
  role: String
}

input WhereUser {
  id: Int,
  email: String
}

type Query {
  users: [User!]!
  user(input: WhereUser) : User
}

type Mutation {
  createUser(input: NewUser): User
  updateUser(input: UpdateUser): User
  deleteUser(input: WhereUser): User
  login(email: String!, senha: String!) : AuthPayload
}
