# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateImmobileInput {
  about: String!
  address: String!
  bathroom: Int!
  bed: Int!
  complement: String
  describe: String!
  district: String!
  footage: Int!
  iptu: String!
  number: String!
  postalcode: String!
  state: String!
  type: String!
  vacancy: Int!
  vboth: String
  vsell: String
}

input CreateOwnerInput {
  email: String!
  name: String!
  phone: String!
}

type Immobile {
  about: String!
  address: String!
  bathroom: Int!
  complement: String
  describe: String!
  district: String!
  footage: Int!
  id: Int!
  iptu: String!
  number: String!
  postalcode: String!
  published: Boolean!
  state: String!
  type: String!
  vacancy: Int!
  vboth: String
  vsell: String
}

type LogoutResponse {
  loggedOut: Boolean!
}

type Mutation {
  createImmobile(createImmobileInput: CreateImmobileInput!): ResponseImmobile!
  createOwner(createOwnerInput: CreateOwnerInput!): Owner!
  createPhotograph: Photograph!
  getNewTokens: NewTokensResponse!
  logout(id: Int!): LogoutResponse!
  removeImmobile(id: Int!): Immobile!
  removeOwner(id: Int!): Owner!
  removeUser(id: Int!): User!
  signin(signInInput: SignInInput!): SignResponse!
  signup(signUpInput: SignUpInput!): SignResponse!
  singleUpload(id: Int!): Photograph!
  updateImmobile(updateImmobileInput: UpdateImmobileInput!): Immobile!
  updateOwner(updateOwnerInput: UpdateOwnerInput!): Owner!
  updateRole(updateRoleInput: UpdateRoleInput!): ResponseValidation!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateValidation(updateValidation: UpdateValidation!): ResponseValidation!
}

type NewTokensResponse {
  accessToken: String!
}

type Owner {
  email: String!
  id: Int!
  name: String!
  phone: String!
}

type Photograph {
  breed: String!
  image: String!
  name: String!
}

type Query {
  immobile(id: Int!): [Immobile!]!
  owner(id: Int!): Owner!
  photograph(id: Int!): Photograph!
  user: [User!]!
  userId: String!
  userOneEmail(email: String!): User!
  userOneId: User!
}

type ResponseImmobile {
  about: String!
  address: String!
  bathroom: Int!
  bed: Int!
  complement: String
  describe: String!
  district: String!
  footage: Int!
  id: Int!
  iptu: String!
  number: String!
  postalcode: String!
  published: Boolean!
  state: String!
  type: String!
  user: User!
  vacancy: Int!
  vboth: String
  vsell: String
}

type ResponseValidation {
  success: Boolean!
  user: User!
}

input SignInInput {
  email: String!
  password: String!
}

type SignResponse {
  accessToken: String!
  immobile: [Immobile!]
  user: User!
}

input SignUpInput {
  email: String!
  name: String!
  password: String!
  phone: String!
  role: String!
}

input UpdateImmobileInput {
  about: String
  address: String
  bathroom: Int
  bed: Int
  complement: String
  describe: String
  district: String
  footage: Int
  id: Int!
  iptu: String
  number: String
  postalcode: String
  state: String
  type: String
  vacancy: Int
  vboth: String
  vsell: String
}

input UpdateOwnerInput {
  email: String
  id: Int!
  name: String
  phone: String
}

input UpdateRoleInput {
  role: String!
  userId: Int!
}

input UpdateUserInput {
  email: String
  hashedPassword: String
  id: Int!
  name: String
  phone: String
  role: String
}

input UpdateValidation {
  id: Int!
  refreshToken: String!
}

type User {
  email: String!
  hashedPassword: String!
  hashedRefreshToken: String
  id: ID!
  name: String!
  phone: String!
  role: String!
  validation: Boolean!
}